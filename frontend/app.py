import streamlit as st
import requests

# Sidebar ƒë·ªÉ nh·∫≠p API URL
with st.sidebar:
    api_url = st.text_input("API URL", key="chatbot_api_url", value="http://localhost:8000/chat")

st.title("üí¨ Chatbot")
st.caption("üöÄ A Streamlit chatbot powered by your API")

# Kh·ªüi t·∫°o session l∆∞u tin nh·∫Øn
if "messages" not in st.session_state:
    st.session_state["messages"] = [{"role": "assistant", "content": "T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n ?"}]

# Hi·ªÉn th·ªã tin nh·∫Øn tr∆∞·ªõc ƒë√≥
for msg in st.session_state.messages:
    st.chat_message(msg["role"]).write(msg["content"])

# G·ª≠i tin nh·∫Øn m·ªõi
if prompt := st.chat_input():
    st.session_state.messages.append({"role": "user", "content": prompt})
    st.chat_message("user").write(prompt)

    # G·ªçi API v·ªõi streaming
    try:
        with requests.post(api_url, json={"text": prompt}, stream=True) as response:
            response.raise_for_status()  # Ki·ªÉm tra l·ªói HTTP

            msg = ""
            chat_placeholder = st.empty()  # T·∫°o v√πng hi·ªÉn th·ªã ph·∫£n h·ªìi

            for chunk in response.iter_content(chunk_size=32):  # ƒê·ªçc t·ª´ng ph·∫ßn nh·ªè
                text_chunk = chunk.decode("utf-8")
                msg += text_chunk
                chat_placeholder.markdown(msg)  # C·∫≠p nh·∫≠t n·ªôi dung hi·ªÉn th·ªã d·∫ßn d·∫ßn

        # L∆∞u tin nh·∫Øn c·ªßa chatbot
        st.session_state.messages.append({"role": "assistant", "content": msg})
    except requests.exceptions.RequestException as e:
        st.error(f"Error calling API: {e}")
